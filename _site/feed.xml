<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TX Blog</title>
    <description>Every failure is leading towards success.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 13 Mar 2025 19:37:40 +0000</pubDate>
    <lastBuildDate>Thu, 13 Mar 2025 19:37:40 +0000</lastBuildDate>
    <generator>Jekyll v4.3.4</generator>
    
      <item>
        <title>Stochastic Simulation</title>
        <description>&lt;h1 id=&quot;chapter-1---introduction&quot;&gt;Chapter 1 - Introduction&lt;/h1&gt;

&lt;p&gt;To keep things simple, we will only use the following Python libraries:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numpy&lt;/code&gt; for numerical operations&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matplotlib&lt;/code&gt; for plotting&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scipy&lt;/code&gt; for scientific computing (when needed)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Remember that our aim is to draw &lt;em&gt;random numbers&lt;/em&gt; from a given probability distribution. In most of the cases, our typical code will start with the following lines:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is then a good idea to learn a few tricks about fixing random states. As we mentioned in the course, pseudorandom numbers often have a &lt;em&gt;seed&lt;/em&gt; that can be used to reproduce the same sequence of numbers. This is very useful for debugging purposes. For example, if you want to check that your code is working as expected, you can fix the seed and check that the output is the same as the one you obtained before. This is also useful for sharing your code with others, as they can reproduce your results.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numpy&lt;/code&gt; has a function called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.random.seed()&lt;/code&gt; to fix the random state. The use of this global method to fix randomness is now being discouraged and it is recommended to use the methods of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Generator&lt;/code&gt; instance. Let us define one seed (Thanks to &lt;a href=&quot;https://scholar.google.co.uk/citations?user=Nv7DaiwAAAAJ&amp;amp;hl=en&quot;&gt;Ayman Boustati&lt;/a&gt; who made me aware of it).&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rng&lt;/code&gt; we just defined, we can draw random numbers. Note that this replaces usual &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;np.random&lt;/code&gt; calls, so if you see example codes like these, you need to convert them (although they still would work and is acceptable in this course). We can now generate random numbers with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rng&lt;/code&gt;, say uniform below.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[0.77395605 0.43887844 0.85859792 0.69736803 0.09417735 0.97562235
 0.7611397  0.78606431 0.12811363 0.45038594]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;estimating-pi&quot;&gt;Estimating $\pi$&lt;/h3&gt;

&lt;p&gt;Let us now consider a demonstration of the Monte Carlo method to estimate $\pi$. As seen in the lecture, this can be achieved by placing a circle inside a square on $[-1, 1] \times [-1, 1]$ and then drawing random points inside the square. We can then check whether these points are in the circle by checking for every random $(x,y)$ point whether
\begin{align&lt;em&gt;}
x^2 + y^2 \leq 1
\end{align&lt;/em&gt;}
holds. Let us do this as follows. We will do some extra steps to demonstrate the convergence.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# calling it again to have consistent generation in the cell
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pi_estimate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;inside_circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# for colouring
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outside_circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# for colouring
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inside&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# for counting the number of points inside the circle
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;subplots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;figsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;printIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# to draw from [-1, 1]
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# to draw from [-1, 1]
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# We will see the reason for this in next weeks
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;inside&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;inside_circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inside_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;outside_circle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outside_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


    &lt;span class=&quot;n&quot;&gt;pi_estimate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inside&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cla&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inside_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inside_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outside_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outside_circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Samples&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# remove the box around the plot and xticks and yticks
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_xticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_yticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cla&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi_estimate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Estimate of $\pi$&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_xlabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set_visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!-- ![png](chapter-1%20copy_files/chapter-1%20copy_8_0.png)
 --&gt;
&lt;p&gt;&lt;img src=&quot;plots/plot1.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;discrete-probability-on-a-computer&quot;&gt;Discrete Probability on a Computer&lt;/h3&gt;

&lt;p&gt;Before we delve into complicated sampling problems, we can start with how to define, plot, and visualise discrete probability distributions. The best way to represent a discrete probability distribution on a computer is through its &lt;em&gt;states&lt;/em&gt; and &lt;em&gt;probabilities&lt;/em&gt;. For example, consider the following discrete probability distribution for a random variable $X$:
\begin{align&lt;em&gt;}
\mathbb{P}(X = 0) = 0.2, \quad \mathbb{P}(X = 1) = 0.3, \quad \mathbb{P}(X = 2) = 0.5.
\end{align&lt;/em&gt;}
We can represent this distribution as a list of states and a list of probabilities. For example, we can define the states as follows:
\begin{align&lt;em&gt;}
\mathsf{s} = [0, 1, 2]
\end{align&lt;/em&gt;}
and the probabilities as follows:
\begin{align&lt;em&gt;}
\mathsf{w} = [0.2, 0.3, 0.5].
\end{align&lt;/em&gt;}
In code this would correspond to the following.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;rng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_rng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;markerfmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ko&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linefmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;StemContainer object of 3 artists&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;plots/plot2.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can also easily plot its CDF.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cdf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cumsum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cdf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ro-&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawstyle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;steps-post&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[&amp;lt;matplotlib.lines.Line2D at 0x10d48d480&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;plots/plot3.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 28 Feb 2025 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/2025/02/28/simulation/</link>
        <guid isPermaLink="true">http://localhost:4000/2025/02/28/simulation/</guid>
        
        
      </item>
    
      <item>
        <title>Brainteasers</title>
        <description>
</description>
        <pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/2025/02/13/brainteasers/</link>
        <guid isPermaLink="true">http://localhost:4000/2025/02/13/brainteasers/</guid>
        
        <category>Quant Finance</category>
        
        
      </item>
    
      <item>
        <title>Some Quant Finance</title>
        <description>&lt;h1 id=&quot;what-are-options&quot;&gt;What are options?&lt;/h1&gt;
&lt;h2 id=&quot;greeks&quot;&gt;Greeks&lt;/h2&gt;
&lt;h3 id=&quot;delta&quot;&gt;Delta&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;ATM call has delta 0.5&lt;/li&gt;
  &lt;li&gt;OTM call has delta 0&lt;/li&gt;
  &lt;li&gt;ITM call has delta 1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Buy Call-Put Parity: $ C - P = S - K e^{-rT} $, buying a call and a shorting a put is 
equivalent to buying the stock with borrowed money of $K e^{-rT} $&lt;/p&gt;

&lt;p&gt;Obviously&lt;/p&gt;

&lt;div class=&quot;kdmath&quot;&gt;$$
- C  + (P + S - K e^{-rT})= 0
$$&lt;/div&gt;

&lt;p&gt;So to hedge a short position in call, one would need to long the stock, buy a put, and borrow $K e^{-rT} $ of cash&lt;/p&gt;

&lt;h3 id=&quot;gamma&quot;&gt;Gamma&lt;/h3&gt;
&lt;p&gt;High means convex trade (delta moves faster than underlying)&lt;/p&gt;

&lt;p&gt;Highest for ATM&lt;/p&gt;

&lt;p&gt;Close to 0 for OTM and ITM&lt;/p&gt;

&lt;h3 id=&quot;vega&quot;&gt;Vega&lt;/h3&gt;
&lt;p&gt;WRT Change in implied vol&lt;/p&gt;

&lt;p&gt;Gamma and vega usually always positive&lt;/p&gt;

&lt;p&gt;IV is usually higher for ITM and OTM options than ATM&lt;/p&gt;

&lt;p&gt;Shorting Vega means selling options and profiting from the risk premium
(but faces an unlimited risk)&lt;/p&gt;

&lt;h3 id=&quot;volatility&quot;&gt;Volatility&lt;/h3&gt;
&lt;p&gt;Standard deviation of log return of some risky assets&lt;/p&gt;

&lt;p&gt;Stocks usually exhibit volatility clustering (volatile days follow volatile days)&lt;/p&gt;

&lt;h3 id=&quot;brownian-motion&quot;&gt;Brownian motion&lt;/h3&gt;

&lt;p&gt;1.B_0 = 0, for any  0,t1…,tn, increment Bt2 - Bt1, are independent&lt;br /&gt;
2.stationary &amp;amp; normal: Bt+h - Bt depend on h only, Bt+h - Bt ~ N(0, h)&lt;br /&gt;
3.Continuous path, B(t) cont over t&lt;/p&gt;

&lt;h3 id=&quot;filtrationsigma-algebera-ft&quot;&gt;filtration/sigma algebera Ft:&lt;/h3&gt;

&lt;p&gt;set of all events up to time t&lt;/p&gt;

&lt;h3 id=&quot;martingale&quot;&gt;Martingale&lt;/h3&gt;
&lt;p&gt;1.Xt is Ft measurable&lt;br /&gt;
2.E[Xt] is finite for all t&lt;br /&gt;
3.E[Xt|Fs] = Xs (expecation of future given past information is current value)&lt;/p&gt;

&lt;p&gt;This suggests there is no systematic way to predict future changes and make a guaranteed profit.&lt;/p&gt;

&lt;h3 id=&quot;black-scholes&quot;&gt;Black-Scholes&lt;/h3&gt;

&lt;p&gt;Assumptions&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Efficient market (all past information already reflected in current stock price)&lt;/li&gt;
  &lt;li&gt;Stock price follows geometric brownian motion, or Log(St) is normal 
(i.e. St = S0 exp( (mu - sig^2/2)t + sig Wt) )&lt;/li&gt;
  &lt;li&gt;Volatility is assumed to be constant&lt;/li&gt;
  &lt;li&gt;Risk free rate constant and known&lt;/li&gt;
  &lt;li&gt;Arbitrage free&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;call-put-parity&quot;&gt;call-put parity&lt;/h3&gt;
&lt;p&gt;C - P = S - Ke^-rT&lt;/p&gt;

&lt;p&gt;If C is cheaper, can buy C sell P and also short the stock&lt;br /&gt;
hedged against price and profit from selling P&lt;/p&gt;

&lt;p&gt;Can also construct butterfly with the cheap C: Buy call at K1 and K3, short C at K2&lt;/p&gt;

&lt;h3 id=&quot;volatility-smile&quot;&gt;Volatility smile&lt;/h3&gt;

&lt;p&gt;implied volatility (IV) is higher for options that are deep in-the-money or out-of-the-money compared to at-the-money options.&lt;/p&gt;

&lt;p&gt;Cannot compute IV analytically, have to numerical (bisection or newton)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Input requirement: max(S0 - Ke^-rT, 0) &amp;lt; call price &amp;lt; stock price&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Why does it exist?
ITM and OTM options are more in demand than ATM options
Consumers buy in-the-money (K &amp;gt; S0e^rT) put as insurance for stock crash (payoff = K - ST)&lt;br /&gt;
ITM put and OTM call has intrinsic value&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fixed income products, how to price how to hedge&lt;/p&gt;

&lt;p&gt;What are swaps&lt;/p&gt;

&lt;h3 id=&quot;volatility-trading&quot;&gt;volatility trading&lt;/h3&gt;
&lt;p&gt;During periods of high volatility, price fluctuations are more frequent, creating more opportunities for market makers to capture the bid-ask spread.&lt;br /&gt;
At same time, higher risk too. To hedge, may need wider spread.&lt;br /&gt;
Less volatile times (more liquidity), can have tight spread, less risk of unfavorable move&lt;/p&gt;

&lt;p&gt;Trading gamma:&lt;br /&gt;
Positive gamma, or convex option: 
Stock up -&amp;gt; delta up -&amp;gt; option up even faster&lt;br /&gt;
During volatile times, option would be even more volatile, need to hedge more frequently&lt;br /&gt;
more opportunies for bid-ask spread, also can keep buying low and selling high&lt;/p&gt;

&lt;h3 id=&quot;options-futures-swaps&quot;&gt;options, futures, swaps&lt;/h3&gt;
&lt;p&gt;forward-similar to future, but OTC, cannot be priced
swaps - agreement to exchange cash flow, priced on net present value
futures - S0 * e^rT (no up-front payment)&lt;/p&gt;

&lt;h3 id=&quot;garch-for-volatility-forecast&quot;&gt;GARCH for volatility forecast&lt;/h3&gt;

&lt;div class=&quot;kdmath&quot;&gt;$$
\sigma_t^2 = long_term_vol + a * \epsilon_{t-1}^2 + b * \sigma_{t-1}^2
$$&lt;/div&gt;

&lt;p&gt;long_term_vol: fixed constant&lt;br /&gt;
eps_t-1: residual derived from log return log(Rt/Rt-1) with mean removed&lt;br /&gt;
sig_t-1: previous volatility (can be implied volatility from Black-Scholes)&lt;/p&gt;

&lt;h2 id=&quot;fixed-income&quot;&gt;Fixed Income&lt;/h2&gt;
&lt;p&gt;interest rates often follow stochastic processes (e.g., Vasicek, CIR).&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Explain monte carlo
run large number of senarios to aggregate, useful when analytical solutions are difficult&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Explain VaR for a portfolio&lt;br /&gt;
VaR = Upper bound of Confidence interval for the loss&lt;br /&gt;
ES = E[ loss | loss &amp;gt; VaR]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;VaR ignores tail risk. One can say 99% confident Loss won’t exceed 1M, but within the 1% chance, don’t know if it’s 1M or 1B. ES addresses this&lt;/p&gt;

&lt;p&gt;Also VAR is not subadditive: risk(A+B) &amp;lt; risk(A) + risk(B), which encourage diversification&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Pricing interest rate swaps.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;forward-similar to future, but OTC, cannot be priced
swaps - agreement to exchange cash flow, priced on net present value
futures - S0 * e^rT (no up-front payment)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;How to hedge bond portfolio against interest rate risk using swaps&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are the key risk factors in a fixed income portfolio?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;If 10-year Treasury yields rise by 20 bps, how would you expect corporate bond spreads to behave and why?&lt;/li&gt;
  &lt;li&gt;A zero-coupon bond matures in 5 years. How does its price sensitivity to interest rates compare to a 5-year coupon bond?&lt;/li&gt;
  &lt;li&gt;Bond portfolio sharpe ratio&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;fx&quot;&gt;Fx&lt;/h2&gt;

&lt;h2 id=&quot;pricing-options-with-monte-carlo&quot;&gt;Pricing options with Monte Carlo&lt;/h2&gt;
&lt;p&gt;Simulate payoff with Geometric brownian motion
Then option price = e^-rT * (average payoff)&lt;/p&gt;

&lt;p&gt;Used when Closed-form solutions are unavailable (e.g. multi-asset options)&lt;/p&gt;

&lt;p&gt;Converges at O(1/sqrt(N)), very slow and expensive&lt;/p&gt;

&lt;h2 id=&quot;risk-management&quot;&gt;Risk management&lt;/h2&gt;
&lt;p&gt;Can use PCA to find which risks contribute to portfolio’s risk&lt;/p&gt;

&lt;p&gt;Look for dimension of max variance, opposed to ICA which look for least entropy (least normal)&lt;/p&gt;

&lt;p&gt;Also find which factors drive asset returns (macro factors)&lt;/p&gt;

&lt;h3 id=&quot;inefficiency-vs-arbitrage-free&quot;&gt;Inefficiency vs Arbitrage-free&lt;/h3&gt;

&lt;p&gt;A market can be inefficient but not arbitrage-free.&lt;/p&gt;

&lt;p&gt;A stock may exhibit price momentum because markets fail to quickly incorporate information.&lt;/p&gt;

&lt;p&gt;Traders could exploit this pattern (inefficiency) by predicting future price movements, but this involves risk.&lt;/p&gt;

&lt;p&gt;At the same time, the market could be arbitrage-free because there are no riskless opportunities to exploit inconsistencies in pricing.&lt;/p&gt;

&lt;h3 id=&quot;itos-formula&quot;&gt;Ito’s formula&lt;/h3&gt;
&lt;p&gt;Given dX = mu dt + sig dW&lt;/p&gt;

&lt;p&gt;for some f(X):&lt;br /&gt;
df = (dfdt + mu * dfdx + 1/2 sig^2 * d^fdx^2)dt + sig * dfdx dW&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Feb 2025 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/2025/02/12/Finance/</link>
        <guid isPermaLink="true">http://localhost:4000/2025/02/12/Finance/</guid>
        
        <category>Quant Finance</category>
        
        
      </item>
    
      <item>
        <title>Some programming</title>
        <description>&lt;h1 id=&quot;general-computer-science-questions&quot;&gt;General Computer Science questions&lt;/h1&gt;

&lt;h2 id=&quot;hash-tables&quot;&gt;&lt;strong&gt;Hash Tables&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;what-is-a-hash-table-and-how-does-it-work&quot;&gt;What is a hash table, and how does it work?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A hash table is a data structure that maps keys to values using a hash function to compute an index into an array of buckets.&lt;/li&gt;
  &lt;li&gt;It allows for fast lookups, inserts, and deletions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Time Complexity&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Average Case&lt;/strong&gt;: ( O(1) ) for insertion, search, and delete.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Worst Case&lt;/strong&gt;: ( O(n) ) for all three operations when all keys map to the same bucket due to collisions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-is-a-hash-collision-and-how-can-it-be-handled&quot;&gt;What is a hash collision, and how can it be handled?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A hash collision occurs when two different keys hash to the same index.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Collision Handling Techniques&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Chaining&lt;/strong&gt;: Use linked lists to store multiple keys in the same bucket.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Open Addressing&lt;/strong&gt;: Probes the next available slot in the array.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-is-a-good-hash-function&quot;&gt;What is a good hash function?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Uniformly distributes keys across the hash table.&lt;/li&gt;
  &lt;li&gt;Minimizes collisions.&lt;/li&gt;
  &lt;li&gt;Efficient to compute.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;heap&quot;&gt;&lt;strong&gt;Heap&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;what-is-a-heap-and-how-is-it-used&quot;&gt;What is a heap, and how is it used?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A heap is a specialized binary tree used to maintain a priority queue.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Min-Heap&lt;/strong&gt;: The smallest element is at the root.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Max-Heap&lt;/strong&gt;: The largest element is at the root.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Time Complexity&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Find Min/Max&lt;/strong&gt;: ( O(1) )&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Insert/Delete&lt;/strong&gt;: ( O(\log n) )&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Building a Heap&lt;/strong&gt;: ( O(n) )&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Heap Sort&lt;/strong&gt;: ( O(n \log n) )&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bst-vs-heap&quot;&gt;&lt;strong&gt;BST vs. Heap&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Heap&lt;/strong&gt;: Ensures the highest/lowest priority element is always at the root.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;BST&lt;/strong&gt;: Maintains an ordered structure where the left child is smaller and the right child is larger than the parent.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Time Complexity&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Search in BST&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Average&lt;/strong&gt;: ( O(\log n) )&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Worst Case (Unbalanced)&lt;/strong&gt;: ( O(n) )&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;sql-concepts&quot;&gt;&lt;strong&gt;SQL Concepts&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;what-is-the-difference-between-a-primary-key-and-a-unique-key&quot;&gt;What is the difference between a primary key and a unique key?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Primary Key&lt;/strong&gt;: Uniquely identifies a row and cannot have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt; values.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unique Key&lt;/strong&gt;: Ensures uniqueness but allows one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt; value.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-is-the-purpose-of-indexing-in-a-database&quot;&gt;What is the purpose of indexing in a database?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Indexes improve the speed of data retrieval by allowing faster row lookups compared to scanning the entire table.&lt;/li&gt;
  &lt;li&gt;Especially useful for large datasets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-is-normalization-in-sql&quot;&gt;What is normalization in SQL?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The process of organizing a database to:
    &lt;ul&gt;
      &lt;li&gt;Reduce redundancy.&lt;/li&gt;
      &lt;li&gt;Improve data integrity.&lt;/li&gt;
      &lt;li&gt;Achieved by dividing large tables into smaller ones and defining relationships between them.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-is-a-foreign-key-in-sql&quot;&gt;What is a foreign key in SQL?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A column (or group of columns) that establishes a link between data in two tables.&lt;/li&gt;
  &lt;li&gt;Enforces &lt;strong&gt;referential integrity&lt;/strong&gt; by ensuring a value in one table matches a value in another.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-is-the-difference-between-inner-join-and-outer-join&quot;&gt;What is the difference between INNER JOIN and OUTER JOIN?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;INNER JOIN&lt;/strong&gt;: Returns rows with matching values in both tables.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;OUTER JOIN&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;LEFT OUTER JOIN&lt;/strong&gt;: Includes all rows from the left table, with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt; for unmatched rows in the right table.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;RIGHT OUTER JOIN&lt;/strong&gt;: Includes all rows from the right table, with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt; for unmatched rows in the left table.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;FULL OUTER JOIN&lt;/strong&gt;: Includes all rows from both tables, with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt; for unmatched rows.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;big-o-notation&quot;&gt;&lt;strong&gt;Big O Notation&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;( f(x) = O(g(x)) ) if there exist constants ( M &amp;gt; 0 ) and ( n &amp;gt; 0 ) such that:
[
|f(x)| \leq M \cdot |g(x)| \text{ for all } x &amp;gt; n.
]&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;linked-list-vs-array&quot;&gt;&lt;strong&gt;Linked List vs. Array&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;| &lt;strong&gt;Operation&lt;/strong&gt;               | &lt;strong&gt;Linked List&lt;/strong&gt; | &lt;strong&gt;Array&lt;/strong&gt;          |
|——————————|—————–|——————–|
| &lt;strong&gt;Access by Index&lt;/strong&gt;          | ( O(n) )      | ( O(1) )         |
| &lt;strong&gt;Search (Sorted)&lt;/strong&gt;          | ( O(n) )      | ( O(\log n) )    |
| &lt;strong&gt;Insertion/Deletion at Head&lt;/strong&gt; | ( O(1) )      | ( O(n) ) (may require resizing) |
| &lt;strong&gt;Insertion/Deletion at Index&lt;/strong&gt; | ( O(n) )      | ( O(n) )         |&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;c-concepts&quot;&gt;&lt;strong&gt;C++ Concepts&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;key-features&quot;&gt;&lt;strong&gt;Key Features&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Speed and Low Latency&lt;/strong&gt;: Ideal for real-time risk analysis and pricing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Memory Allocation&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;malloc()&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;free()&lt;/code&gt; for heap memory (manual management).&lt;/li&gt;
      &lt;li&gt;Classes typically use static memory (automatically managed).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;multithreading&quot;&gt;&lt;strong&gt;Multithreading&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Unlike Python, C++ does not have a Global Interpreter Lock (GIL), enabling true multithreading.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;namespaces&quot;&gt;&lt;strong&gt;Namespaces&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Avoid name collisions by organizing code logically.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;object-oriented-programming-oop&quot;&gt;&lt;strong&gt;Object-Oriented Programming (OOP)&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Inheritance&lt;/strong&gt;: Base and derived classes.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Polymorphism&lt;/strong&gt;: Runtime behavior via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtual&lt;/code&gt; functions.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Encapsulation&lt;/strong&gt;: Hiding data within classes.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Abstraction&lt;/strong&gt;: Simplifying complex systems.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;structs&quot;&gt;&lt;strong&gt;Structs&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Groups different data types into a single entity.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;floating-point-types&quot;&gt;&lt;strong&gt;Floating-Point Types&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;float&lt;/code&gt;: 32-bit precision.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt;: 64-bit precision.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;virtual-functions&quot;&gt;&lt;strong&gt;Virtual Functions&lt;/strong&gt;:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Enable runtime polymorphism and allow overriding parent methods.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pure-virtual-function&quot;&gt;&lt;strong&gt;Pure virtual function&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;a virtual function that is declared within a base class but has no implementation in that class&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;pure virtual vs virtual:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Aspect&lt;/th&gt;
      &lt;th&gt;Pure Virtual&lt;/th&gt;
      &lt;th&gt;Virtual&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Definition&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Declared with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;= 0&lt;/code&gt;, no implementation in the base class.&lt;/td&gt;
      &lt;td&gt;Can have an implementation in the base class.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Syntax&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtual void func() = 0;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtual void func() { ... };&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Aspect&lt;/th&gt;
      &lt;th&gt;Pure Virtual&lt;/th&gt;
      &lt;th&gt;Virtual&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Primary Purpose&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Defines an &lt;strong&gt;interface&lt;/strong&gt; in the base class.&lt;/td&gt;
      &lt;td&gt;Provides a &lt;strong&gt;default behavior&lt;/strong&gt; in the base class.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Requirement&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Derived classes &lt;strong&gt;must&lt;/strong&gt; override the function unless the derived class is also abstract.&lt;/td&gt;
      &lt;td&gt;Derived classes &lt;strong&gt;may&lt;/strong&gt; override the function, but it is not required.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Base Class Usage&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Makes the base class &lt;strong&gt;abstract&lt;/strong&gt; (non-instantiable).&lt;/td&gt;
      &lt;td&gt;The base class can still be instantiated.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Polymorphism&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Ensures all derived classes implement the same interface.&lt;/td&gt;
      &lt;td&gt;Allows derived classes to optionally customize behavior.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;hiding-in-c&quot;&gt;&lt;strong&gt;hiding in C++&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Derived class also define function in same name as base class (just like polymorphism with virtual).&lt;/p&gt;

&lt;p&gt;but provide a new definition in the derived class that is unrelated to the base class member.&lt;/p&gt;

&lt;p&gt;The function in base class is just void, not virtual.&lt;/p&gt;

&lt;p&gt;Hiding uses compile-time binding, virtual functions uses runtime binding.&lt;/p&gt;

&lt;h3 id=&quot;memory-leak-memory-overhead-memory-overflow-memory-corruption&quot;&gt;memory leak, memory overhead, memory overflow, memory corruption&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Memory leak: Program fails to release memory, should free memory after use&lt;/li&gt;
  &lt;li&gt;Memory overhead: Program requiring extra memory (e.g. dynamic memory allocation)&lt;/li&gt;
  &lt;li&gt;Memory overflow: Program uses more memory than available&lt;br /&gt;
(e.g. stack overflow, call stack reaches max recursion depth)&lt;/li&gt;
  &lt;li&gt;Memory corruption: Program modifies memory it does not own&lt;br /&gt;
Can lead to crashes and data loss&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;python&quot;&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;How to handle exceptions?&lt;/strong&gt;&lt;br /&gt;
Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;try&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;except&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;else&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;finally&lt;/code&gt; blocks to catch and handle exceptions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Difference between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deepcopy&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shallowcopy&lt;/code&gt;?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Deepcopy&lt;/strong&gt;: Copies all objects recursively.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Shallowcopy&lt;/strong&gt;: Only copies the reference for nested objects.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pandas&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;How is a Pandas DataFrame different from an SQL table?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both represent tabular data, but a Pandas DataFrame is an in-memory object for data manipulation in Python, while an SQL table is part of a relational database.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How to detect missing data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;isnull()&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Difference between loc and iloc?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;loc uses column/row labels&lt;br /&gt;
iloc uses integet indices&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;concat vs merge vs join&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;concat(): Stacks DataFrames along rows or columns.&lt;br /&gt;
merge(): Combines DataFrames based on common columns or indices, similar to SQL joins.&lt;br /&gt;
join(): Combines DataFrames based on their indices.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;multithreading-vs-multiprocessing&quot;&gt;&lt;strong&gt;Multithreading vs Multiprocessing&lt;/strong&gt;&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;excel&quot;&gt;&lt;strong&gt;Excel&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Relative, absolute, and mixed references?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Relative&lt;/strong&gt;: Adjusts as you copy (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A1&lt;/code&gt;).&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Absolute&lt;/strong&gt;: Fixed reference (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$A$1&lt;/code&gt;).&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Mixed&lt;/strong&gt;: Fixes row or column (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$A1&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A$1&lt;/code&gt;).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Conditional formatting?&lt;/strong&gt;&lt;br /&gt;
Apply rules to highlight cells based on criteria, like highlighting values &amp;gt; 100.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Common functions?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VLOOKUP&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HLOOKUP&lt;/code&gt;: Find values in rows/columns.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INDEX-MATCH&lt;/code&gt;: Dynamic lookups.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IF&lt;/code&gt;: Conditional logic.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SUMIF&lt;/code&gt;: Sum based on a condition.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Pivot tables?&lt;/strong&gt;&lt;br /&gt;
Summarize, group, and analyze data dynamically by dragging fields into rows, columns, and values.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data validation?&lt;/strong&gt;&lt;br /&gt;
Restricts user input in cells, e.g., dropdown lists or numeric limits.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;vba&quot;&gt;&lt;strong&gt;VBA&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;What is VBA?&lt;/strong&gt;&lt;br /&gt;
A programming language in Excel used for automation, macros, and creating custom functions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Key VBA objects?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Workbook&lt;/strong&gt;: The Excel file.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Worksheet&lt;/strong&gt;: A sheet in the workbook.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Range&lt;/strong&gt;: A cell or group of cells.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;How to debug VBA code?&lt;/strong&gt;&lt;br /&gt;
Use breakpoints, the Immediate Window, and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Debug.Print&lt;/code&gt; method.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;How to run a macro?&lt;/strong&gt;&lt;br /&gt;
Use the Developer tab &amp;gt; Macros or assign it to a button.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;VBA for data analysis?&lt;/strong&gt;&lt;br /&gt;
Automates repetitive tasks like importing data, formatting, and creating charts.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;sql&quot;&gt;&lt;strong&gt;SQL&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Primary key vs unique key?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Primary Key&lt;/strong&gt;: Ensures uniqueness and no &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt; values.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Unique Key&lt;/strong&gt;: Ensures uniqueness but allows one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt; value.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;e.g. For a table of students, StudentID can be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;primary key&lt;/code&gt; (must-have, unique, cannot be null)&lt;br /&gt;
Student_name can be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unique key&lt;/code&gt; also unique but can be null&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;What is indexing?&lt;/strong&gt;&lt;br /&gt;
Improves query speed by creating a data structure for fast lookups on columns.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;What is normalization?&lt;/strong&gt;&lt;br /&gt;
Organizing data to reduce redundancy and ensure integrity by dividing tables logically.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;What is a foreign key?&lt;/strong&gt;&lt;br /&gt;
Links data between tables, enforcing that values in one table exist in another.&lt;br /&gt;
e.g. In another table called Course_Enrolment, can have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StudentID&lt;/code&gt; columns referencing students taking this course&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;INNER JOIN vs OUTER JOIN?&lt;/strong&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;INNER JOIN&lt;/strong&gt;: Returns only matching rows.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;OUTER JOIN&lt;/strong&gt;: Includes unmatched rows with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULLs&lt;/code&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;r&quot;&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;What is R used for?&lt;/strong&gt;&lt;br /&gt;
Statistical computing, data visualization, and machine learning.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;What are R’s data structures?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Vectors&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Matrices&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Data Frames&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Lists&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;How to install packages in R?&lt;/strong&gt;&lt;br /&gt;
Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;install.packages(&quot;package_name&quot;)&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;library(package_name)&lt;/code&gt; to load.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;What is ggplot2?&lt;/strong&gt;&lt;br /&gt;
A popular R library for creating customizable visualizations.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How to handle missing data?&lt;/strong&gt;&lt;br /&gt;
Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;na.omit()&lt;/code&gt; to remove or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;impute()&lt;/code&gt; to fill missing values.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 12 Feb 2025 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/2025/02/12/Coding/</link>
        <guid isPermaLink="true">http://localhost:4000/2025/02/12/Coding/</guid>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>Thoughts on DeepSeek</title>
        <description>&lt;h1 id=&quot;innovations-of-deepseek&quot;&gt;Innovations of DeepSeek&lt;/h1&gt;
&lt;h2 id=&quot;v3-base&quot;&gt;V3-Base&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;671B decoder-only transformer&lt;/li&gt;
  &lt;li&gt;Self-supervised pre-training:
No label, train on first half of sentence to predict the second half&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;r1-zero&quot;&gt;R1-Zero&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Trained on v3-base using reinforcement learning:&lt;/li&gt;
  &lt;li&gt;Supervised fine tuning (SFT)&lt;/li&gt;
  &lt;li&gt;Reinforcement Learning from Human Feedback (RLHF)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;r1&quot;&gt;R1&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Use R1-zero to come up with good CoT&lt;/li&gt;
  &lt;li&gt;Use those CoT to fine-tune V3-Base, Then train with SFT to get R1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;llamaqwen-distilled&quot;&gt;Llama/Qwen Distilled&lt;/h2&gt;

&lt;p&gt;Use R1 to come up with 800k samples, then use those
to train other open-source models: Meta &amp;amp; Qwen&lt;/p&gt;

&lt;h2 id=&quot;other-techniques&quot;&gt;Other techniques&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;MoE system&lt;/li&gt;
  &lt;li&gt;Multihead latent Attention (MLA)&lt;/li&gt;
  &lt;li&gt;Distilling using O1&lt;/li&gt;
  &lt;li&gt;Low-level programming GPU cores&lt;/li&gt;
  &lt;li&gt;Group Relative Policy Optimization (GRPO)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;implementing-deepseek-locally&quot;&gt;Implementing DeepSeek Locally&lt;/h1&gt;

&lt;h2 id=&quot;ollama&quot;&gt;OLlama&lt;/h2&gt;
&lt;p&gt;This is the easier way.&lt;/p&gt;

&lt;p&gt;Simply go to &lt;a href=&quot;https://ollama.com/library/deepseek-r1&quot;&gt;Ollama&lt;/a&gt;, and select a model to download.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;7b which takes 4.7GB of local disk space actually works pretty well. 
When you serve it locally, it takes only 600Mb of RAM on my M1 Mac&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;14b which takes 9.0GB is also a feasible choice&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then locally run&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ollama run deepseek-r1:7b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A good UI is &lt;a href=&quot;https://chromewebstore.google.com/detail/page-assist-a-web-ui-for/jfgfiigpkhlkbnfnbobbkinehhfdhndo?hl=en&amp;amp;pli=1&quot;&gt;Page Assist&lt;/a&gt;, which you can install as an extention on your chrome. Then simply open the extention and you get a nice chat box to talk to your own 7b model locally. 7b is actually way smarter than Llama 70b in my opinion&lt;/p&gt;

&lt;h2 id=&quot;vllm&quot;&gt;VLLM&lt;/h2&gt;

&lt;p&gt;This is the official supported option of DeepSeek, but requires more setup.&lt;/p&gt;

&lt;p&gt;You can checkout my setup &lt;a href=&quot;https://github.com/JackxTong/DeepSeek-local&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This allows you to serve your local model on your Linux HPC, customizing the number of GPUs to use, quantized datatype( bfloat16), model length etc, e.g.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CUDA_VISIBLE_DEVICES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1,2
vllm serve deepseek-ai/DeepSeek-R1-Distill-Qwen-14B &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--dtype&lt;/span&gt; bfloat16 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--tensor-parallel-size&lt;/span&gt; 2 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--max-model-len&lt;/span&gt; 4096
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The disadvantage is you don’t get a nice UI extension like Page Assistant.
Instead, you can prompt it in terminal like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl http://localhost:8000/v1/completions &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;{
    &quot;model&quot;: &quot;deepseek-ai/DeepSeek-R1-Distill-Qwen-14B&quot;,
    &quot;prompt&quot;: &quot;蔡徐坤擅长唱跳和什么？&quot;,
    &quot;temperature&quot;: 0.6,
    &quot;max_tokens&quot;: 512
  }&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And receive its response also in terminal like this:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;cmpl-78xxxxx&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;object&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;text_completion&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;created&quot;&lt;/span&gt;:1738xxxxx,&lt;span class=&quot;s2&quot;&gt;&quot;model&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;deepseek-ai/DeepSeek-R1-Distill-Qwen-14B&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;choices&quot;&lt;/span&gt;:[&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot; 蔡徐坤擅长唱跳和什么？&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;好，用户问蔡徐坤擅长唱跳和什么。首先，我需要确认蔡徐坤的主要才能。他确实是唱跳歌手，所以唱跳肯定是他的强项。接下来，他还有什么特别的技能呢？&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;我记得他参加过《偶像练习生》节目，表现出色，所以可能还有其他的才能。比如，他有没有特别擅长的舞蹈风格？或者他在音乐创作方面有贡献？&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;另外，蔡徐坤可能在其他领域也有涉猎，比如时尚或者主持。这些可能也是他的强项。需要详细列举出来，让用户全面了解。&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;所以，整理一下，我会回答说他唱跳rap篮球&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;lt;/think&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;蔡徐坤擅长唱跳rap篮球，练习两年半。&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;logprobs&quot;&lt;/span&gt;:null,&lt;span class=&quot;s2&quot;&gt;&quot;finish_reason&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;stop&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;stop_reason&quot;&lt;/span&gt;:null,&lt;span class=&quot;s2&quot;&gt;&quot;prompt_logprobs&quot;&lt;/span&gt;:null&lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;usage&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prompt_tokens&quot;&lt;/span&gt;:10,&lt;span class=&quot;s2&quot;&gt;&quot;total_tokens&quot;&lt;/span&gt;:295,&lt;span class=&quot;s2&quot;&gt;&quot;completion_tokens&quot;&lt;/span&gt;:285,&lt;span class=&quot;s2&quot;&gt;&quot;prompt_tokens_details&quot;&lt;/span&gt;:null&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/2025/02/08/DeepSeek/</link>
        <guid isPermaLink="true">http://localhost:4000/2025/02/08/DeepSeek/</guid>
        
        <category>Deep learning</category>
        
        <category>LLM</category>
        
        
      </item>
    
      <item>
        <title>Data Science Internship</title>
        <description>&lt;h2 id=&quot;data-science-intern-at-natwest-group&quot;&gt;Data Science Intern at Natwest Group&lt;/h2&gt;
&lt;p&gt;Jun - Aug 2024&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;I was placed into the Data Science team within Natwest Group Solutions&lt;/p&gt;

&lt;p&gt;I was in charge of improving the machine learning classifier for the Suspicious Activity Reports (SAR) which the FinCrime team need to analyze.&lt;/p&gt;

&lt;h3 id=&quot;challenges&quot;&gt;Challenges&lt;/h3&gt;

&lt;p&gt;The SAR are written by different humans, without a set strict format in general.&lt;/p&gt;

&lt;p&gt;The purpose is to classify each SAR into a category (e.g. Money laundering, gambling, fraud etc), for further analysis. The old classifier used by the FinCrime team is a rule-based model (based on a bunch of if-elses), and can lead to low classication accuracy especially in terms of minority groups. A major challenge for using a machine learning model that can be trained for higher accuracy is the lack of labeled data. While the bank has several thousand SARs per month, human labor are needed to label each SAR with the right category, and we had only 50ish labeled SARs per month.&lt;/p&gt;

&lt;h3 id=&quot;my-approach&quot;&gt;My Approach&lt;/h3&gt;
&lt;p&gt;We used LLM to generate synthetic SARs for each category. To ensure the quality, we employed clustering analysis by looking at the vector embeddings of the original data and the generated data, both fed into the embedding layer of an LLM into a (1546,) vector. We used PCA to find the two most important dimension for plotting the data vectors, computed average consine similarity for both old and new data, and also constructed a cosine-distance based KNN graph. All evidence suggested there isn’t a systematic difference between the old and the new synthetic text data.&lt;/p&gt;

&lt;p&gt;An alternative approach where we directly prompt the LLM to do the classication also worked, though it still suffers from hallucinations and occasionally create categories that didn’t exist.&lt;/p&gt;

&lt;h3 id=&quot;technologies-used&quot;&gt;Technologies Used&lt;/h3&gt;
&lt;p&gt;We used OpenAI API through Azure.&lt;/p&gt;

&lt;p&gt;The coding environment was based on the AWS Sagemaker Studio, and data are stored in the AWS S3 database.&lt;/p&gt;

</description>
        <pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/2024/11/01/Natwest/</link>
        <guid isPermaLink="true">http://localhost:4000/2024/11/01/Natwest/</guid>
        
        <category>python</category>
        
        <category>AWS</category>
        
        <category>Internship</category>
        
        
      </item>
    
      <item>
        <title>Machine Learning Internship</title>
        <description>&lt;h2 id=&quot;ml-internship-at-imperials-ai-lab-deepwok&quot;&gt;ML Internship at Imperial’s AI Lab &lt;a href=&quot;https://deepwok.github.io/&quot;&gt;Deepwok&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Apr - Sep 2024&lt;/p&gt;

&lt;p&gt;ethan&lt;/p&gt;

&lt;h3 id=&quot;project-overview&quot;&gt;Project Overview&lt;/h3&gt;
&lt;p&gt;DNA language models apply techniques from natural language processing (NLP) to model biological sequences, treating DNA as a “language” to capture patterns, structures, and functional elements in genomic data. These models aim to understand and predict biological phenomena by encoding DNA sequences in a format that machine learning models can use.&lt;/p&gt;

&lt;p&gt;Tokenization Methods: In DNA language models, tokenization is the process of breaking down DNA sequences into manageable units, or “tokens,” which represent the genetic information. State-of-the-art DNA models like Hyena used a mere character-level naive tokenizer, simply translating ‘A’, ‘C’, ‘G’, ‘T’ to fixed integers. We were experimenting the adoptation of the 
Byte-Pair Encoding (BPE) method used in GPT3 and GPT4. The idea is to combine frequently occurring character pairs into single tokens iteratively, creating a hierarchy of tokens that balances between single characters and multi-character sequences.&lt;/p&gt;

&lt;h3 id=&quot;contribution&quot;&gt;Contribution&lt;/h3&gt;
&lt;p&gt;As part of the team to develop a BPE-based DNA LLM, my work mostly involves two parts.&lt;/p&gt;

&lt;p&gt;Firstly, I worked on fine-tuning the hyperparameters like the vocab size for BPE, sequence length, context window etc for the DNA LLM. We built our model based on Olmo LLM &lt;a href=&quot;https://huggingface.co/allenai/OLMo-1B&quot;&gt;1B&lt;/a&gt; and &lt;a href=&quot;https://huggingface.co/allenai/OLMo-7B&quot;&gt;7B&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, I mostly worked on developping a modular evaluation framework that integrates our DNA LLM with downstream tasks (e.g. gene prediction, Protein-DNA interaction prediction) and benchmarks e.g. &lt;a href=&quot;https://github.com/ML-Bioinfo-CEITEC/genomic_benchmarks&quot;&gt;Genomic Benchmarks&lt;/a&gt;, enabling automated performance evaluations and comparisons.&lt;/p&gt;

&lt;p&gt;For example, this involves comparing our model’s performance with &lt;a href=&quot;https://github.com/MAGICS-LAB/DNABERT_2&quot;&gt;DNABERT2&lt;/a&gt; and &lt;a href=&quot;https://github.com/HazyResearch/hyena-dna&quot;&gt;Hyena&lt;/a&gt;, both were established State-of-the-Art models on Genomic Benchmarks.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Sep 2024 00:00:00 +0100</pubDate>
        <link>http://localhost:4000/2024/09/01/Deepwok-Lab-en/</link>
        <guid isPermaLink="true">http://localhost:4000/2024/09/01/Deepwok-Lab-en/</guid>
        
        <category>Pytorch</category>
        
        <category>LLM</category>
        
        <category>Machine Learning</category>
        
        <category>Internship</category>
        
        
      </item>
    
      <item>
        <title>Optiver &amp; Imperial Trading Academy</title>
        <description>&lt;h2 id=&quot;optiver--imperial-trading-academy&quot;&gt;Optiver &amp;amp; Imperial Trading Academy&lt;/h2&gt;
&lt;p&gt;Nov 7 - 29, 2023&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;This is an 8-session &lt;a href=&quot;https://optiver.com/recruitment-events/imperial-college-london-x-optiver-trading-academy/&quot;&gt;project&lt;/a&gt; that covers both the foundations of options theory and hands-on algorithm development and testing. At the end of the session, I participated with other student traders together in a real-time trading challenge by designing our own Python trading algorithm based on real financial market data.&lt;/p&gt;

&lt;h3 id=&quot;what-i-did&quot;&gt;What I did&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Developed a delta-hedging trading algorithm that autonomously traded options in Optiver’s simulated exchange, Optibook, leveraging the Black-Scholes model for option pricing.&lt;/li&gt;
  &lt;li&gt;Trained an SVM model to dynamically adjust the credit for bid/ask prices based on liquidity, volatility, time to expiry, and historical price movements.&lt;/li&gt;
  &lt;li&gt;Achieved positive PnL of $500,000, ranked in top 20% of participants in the contest with over 50 student traders.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
        <link>http://localhost:4000/2023/11/01/optiver/</link>
        <guid isPermaLink="true">http://localhost:4000/2023/11/01/optiver/</guid>
        
        <category>volatility trading</category>
        
        <category>equity option pricing</category>
        
        <category>quantitative research</category>
        
        
      </item>
    
  </channel>
</rss>
